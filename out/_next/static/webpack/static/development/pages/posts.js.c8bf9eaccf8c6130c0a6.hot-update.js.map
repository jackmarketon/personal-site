{"version":3,"file":"static/webpack/static/development/pages/posts.js.c8bf9eaccf8c6130c0a6.hot-update.js","sources":["webpack:///./pages/posts.js","webpack:///./src/posts.js"],"sourcesContent":["import React, { Component } from 'react';\nimport Link from 'next/link';\n\nimport posts from '../src/posts';\n\nexport default class extends Component {\n  static async getInitialProps() {\n    // Get Posts from folder\n    return { posts };\n  }\n\n  render() {\n    const { posts } = this.props;\n\n    return (\n      <>\n        <h1>Posts</h1>\n        {posts.map(({ document: { data: { title } }, slug }) => (\n          <Link\n            href={{ pathname: '/post', query: { id: slug } }}\n            as={`/post/${slug}`}\n            key={slug}\n          >\n            <h2>{title}</h2>\n          </Link>\n        ))}\n      </>\n    );\n  }\n}\n","import matter from 'gray-matter';\n\n// eslint-disable-next-line import/no-mutable-exports\nlet posts = null;\n\nfunction initPosts() {\n  if (posts !== null) {\n    return posts;\n  }\n\n  return (ctx => {\n    const keys = ctx.keys();\n    const values = keys.map(ctx);\n    console.log(values);\n\n    return keys.map((key, idx) => {\n      // Slug from file name\n      const slug = key\n        .replce(/^.*[\\\\/]/, '')\n        .split('.')\n        .slice(0, -1)\n        .join('.');\n      const { default: value } = values[idx];\n      const document = matter(value);\n\n      return { document, slug };\n    });\n  })(require.context('../posts', true, /\\.md$/));\n}\n\nposts = initPosts();\n\nexport default posts;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAAA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAEA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AAxBA;AACA;;;;;;;;;;;;;;;;;;;;;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAKA;AAAA;AAAA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;;A","sourceRoot":""}